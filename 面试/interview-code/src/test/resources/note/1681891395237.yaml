---
answer: null
label:
  chapter: null
  company: "北京-知迪汽车-二面"
  level: null
  other: null
subject: "1 简单介绍一下自己和自己过往工作经验 介绍过程中候选人有问有答，表述有条理，逻辑清楚-8 分\n2 关于之前自己做的自动化测试开发相关项目，可\
  以重点介绍一下吗 对项目表述清晰，参考简历上候选人写的内容，能回答到问题点上-8 分\n3 请描述自己的自动化测试流程，如何跟踪结果，通过什么方式导出测试结果和\
  报告\nA、自动化测试的流程: 3.1.编写自动化测试计划\n3.2 设计自动化测试用例\n3.3 用例转自动化测试脚本\n3.4 自动化测试脚本的调试和维护\
  \ 3.5 无人值守测试\n3.6 后期的一些维护工作:添加一些新的用例、开发更新代码版本之后有一些元素信息 变更进行一些维护\nB、将测试结果通过邮件/或其他\
  等方式自动发送给相关人员 C、自动生成测试结果和测试报告\n以上答案能说出-8 分\n4 介绍一下 Python 列表\n列表切片:\n列表[start : end\
  \ : step]\n列表操作包含以下函数:\n4.1.1 cmp(list1, list2):比较两个列表的元素 (python3 已丢弃)\n4.1.2 len(list):列\
  表元素个数\n4.1.3 max(list):返回列表元素最大值\n4.1.4 min(list):返回列表元素最小值\n4.1.5 list(seq):将元组\
  转换为列表\n列表操作常用操作包含以下方法:\n4.2.1 list.append(obj):在列表末尾添加新的对象\n4.2.2 list.count(obj):统\
  计某个元素在列表中出现的次数\n4.2.3 list.extend(seq):在列表末尾一次性追加另一个序列中的多个值(用新列表扩 展原来的列表)\n4.2.4\
  \ list.index(obj):从列表中找出某个值第一个匹配项的索引位置\n4.2.5 list.insert(index, obj):将对象插入列表\n\
  4.2.6 list.pop(obj=list[-1]):移除列表中的一个元素(默认最后一个元素)，并且 返回该元素的值\n4.2.7 list.remove(obj):移\
  除列表中某个值的第一个匹配项\n4.2.8 list.reverse():反向列表中元素\n4.2.9 list.sort([func]):对原列表进行排序\n\
  以上答案能回答出三个及以上-8 分\n5 简述一下 Pytest 的特点\n5.1 可以支持简单的单元测试和复杂的功能测试,也可以用于 selenium/appnium\
  \ 等自动 测试和界面自动测试(pytest+requests);有许多第三方插件，可以自定义和扩展。 如: pytest-selenium(集成 selenium)、\
  pytest-html(完美 html 测试报告生成)、 pytest-rerunfailures(失败 case 重复执行)、pytest-xdist(多 CPU\
  \ 分发)等。 以上答案能回答出-8 分\n6 介绍一下在过往工作经验中涉及到的数据库相关内容\n比如:Mysql, Oracle, MongoDB, SqlServer\n\
  7 根据简历内容，做一些其他关注的技术问答\n自由发挥题-自行判断打分\nPart2 Coding环节-用自己熟悉的编程语言来写即可\n一、确定字符串是否是另一\
  个的排列\n题目介绍:\n实现一个算法来识别一个字符串 str2 是否是另一个字符串 str1 的排列。排列的解释 如下:\n如果将 str1 的字符拆分开，重\
  新排列后再拼接起来，能够得到 str2 ，那么就说字 符串 str2 是字符串 str1 的排列。例如:123 是 321 的排列，abc 是 cba 的排列。\
  \n如果 str2 字符串是 str1 字符串的排列，则返回 True;反之则返回 False; 考核点:sorted()方法\n解题思路: 一样是看起来复杂，\
  但只需一行核心代码就能搞定的题目。在其他语言中，你可能要手 动写一个排序算法，然后比较两个字符串排序后是否一样。但 Python 自带的 sorted() 方法\
  ，可以自动对所有可迭代的对象进行排序操作。\n答案:\nclass Permutations(object):\ndef is_permutation(self,\
  \ str1, str2): if str1 is None or str2 is None:\n            return False\n    \
  \    return sorted(str1) == sorted(str2)\n附加知识点:\nsort() 和 sorted() 的区别:sort() 应\
  用在 list 列表中，而 sorted() 可以对所有 可迭代的对象进行排序操作。\n二、反转字符串中的字符\n题目介绍:\n\n实现一个算法来实现反转字符数\
  组的功能。反转的要求如下: 将字符数组的字符进行反转，例如 ['b', ' ', 'a', 'r'] 变成 ['r', 'a', ' ', 'b']。 将字符数\
  组替换为反转后的数组。\n考核点:使用 a,b = b,a 交换变量\n解题思路: 常规的解法是创建一个相同长度的新数组，然后把第一个数组中的元素，按倒序放入新\
  \ 数组中。但更简单的方法是:利用 Python 交换变量的特性，不需要新建数组，直接在 原数组里即可完成，代码如下。\n答案:\nclass ReverseString(object):\n\
  \    def reverse(self, chars):\n        if chars:\nsize = len(chars)\nfor i in range(size\
  \ // 2):\nchars[i], chars[size - 1 - i] =  chars[size - 1 - i], chars[i]\nreturn\
  \ chars"
type: null
options: null
introduction: null
